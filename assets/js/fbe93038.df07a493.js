"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[133],{8800:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"testing","title":"Testing","description":"Follow the installation steps above to have the application ready, then","source":"@site/docs/testing.md","sourceDirName":".","slug":"/testing","permalink":"/docs/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/testing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Testing","sidebar_label":"Testing","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Webserver","permalink":"/docs/webserver"},"next":{"title":"Troubleshooting","permalink":"/docs/troubleshooting"}}');var i=n(4848),a=n(8453);const r={title:"Testing",sidebar_label:"Testing",sidebar_position:7},l="Testing",o={},h=[{value:"Testing Setup for Developers",id:"testing-setup-for-developers",level:2},{value:"Database Configuration",id:"database-configuration",level:3},{value:"Setup the Test Config File",id:"setup-the-test-config-file",level:3},{value:"API Interactive GraphQL Interaction",id:"api-interactive-graphql-interaction",level:2},{value:"Interactive GraphQL URL",id:"interactive-graphql-url",level:3},{value:"Interactive GraphQL Screenshot",id:"interactive-graphql-screenshot",level:3},{value:"Important File Locations",id:"important-file-locations",level:2},{value:"Module Library Layout",id:"module-library-layout",level:3},{value:"Database and GraphQL",id:"database-and-graphql",level:3},{value:"Run the Test Suite",id:"run-the-test-suite",level:2},{value:"Populating the Database Using the Ingester",id:"populating-the-database-using-the-ingester",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"testing",children:"Testing"})}),"\n",(0,i.jsx)(t.p,{children:"Follow the installation steps above to have the application ready, then\nadd these steps for developing code."}),"\n",(0,i.jsx)(t.h2,{id:"testing-setup-for-developers",children:"Testing Setup for Developers"}),"\n",(0,i.jsx)(t.p,{children:"Follow the installation steps above to have the application ready, then\nadd these steps for developing code."}),"\n",(0,i.jsx)(t.h3,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["Create the ",(0,i.jsx)(t.code,{children:"switchmap_unittest"})," database, and grant privileges to a\n",(0,i.jsx)(t.code,{children:"switchmap_unittest"})," user with the password ",(0,i.jsx)(t.code,{children:"switchmap_unittest"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"$ sudo mysql\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"CREATE DATABASE switchmap_unittest;\nGRANT ALL PRIVILEGES ON switchmap_unittest.* TO 'switchmap_unittest'@'localhost' IDENTIFIED BY 'switchmap_unittest';\nFLUSH PRIVILEGES;\nEXIT;\n"})}),"\n",(0,i.jsx)(t.h3,{id:"setup-the-test-config-file",children:"Setup the Test Config File"}),"\n",(0,i.jsxs)(t.p,{children:["Create the testing configuration file which will be stored in a hidden\ndirectory in ",(0,i.jsx)(t.code,{children:"$HOME"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"(venv) $ tests/bin/test_db_config_setup.py\n"})}),"\n",(0,i.jsx)(t.h2,{id:"api-interactive-graphql-interaction",children:"API Interactive GraphQL Interaction"}),"\n",(0,i.jsx)(t.p,{children:"This is useful for:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Developing queries for API clients."}),"\n",(0,i.jsx)(t.li,{children:"Troubleshooting your code."}),"\n",(0,i.jsx)(t.li,{children:"Creating new features."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"On the API server you'll be able to make GraphQL queries in an easy to\nuse interactive web page."}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Enter your query in the left hand panel"}),"\n",(0,i.jsxs)(t.li,{children:["Press the ",(0,i.jsx)(t.code,{children:"Play"})," button"]}),"\n",(0,i.jsx)(t.li,{children:"Observe the results"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"interactive-graphql-url",children:"Interactive GraphQL URL"}),"\n",(0,i.jsx)(t.p,{children:"The URL on a running on your local server is:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"http://localhost:7000/switchmap/api/igraphql",children:"http://localhost:7000/switchmap/api/igraphql"})}),"\n",(0,i.jsx)(t.h3,{id:"interactive-graphql-screenshot",children:"Interactive GraphQL Screenshot"}),"\n",(0,i.jsx)(t.p,{children:"Here is a sample of what to you can do with interactive queries."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image",src:n(8366).A+"",width:"1203",height:"927"})}),"\n",(0,i.jsx)(t.h2,{id:"important-file-locations",children:"Important File Locations"}),"\n",(0,i.jsx)(t.p,{children:"These locations are important for developers:"}),"\n",(0,i.jsx)(t.h3,{id:"module-library-layout",children:"Module Library Layout"}),"\n",(0,i.jsx)(t.p,{children:"Modules are arranged like this:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["The API modules are located in ",(0,i.jsx)(t.code,{children:"switchmap/server"})]}),"\n",(0,i.jsxs)(t.li,{children:["The Poller modules are located in ",(0,i.jsx)(t.code,{children:"switchmap/poller"})]}),"\n",(0,i.jsxs)(t.li,{children:["The Web UI modules are located in ",(0,i.jsx)(t.code,{children:"switchmap/dashboard"})]}),"\n",(0,i.jsxs)(t.li,{children:["Modules that are shared with all three are located in\n",(0,i.jsx)(t.code,{children:"switchmap/core"})]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"database-and-graphql",children:"Database and GraphQL"}),"\n",(0,i.jsx)(t.p,{children:"Reviewing these files will be important."}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["The Database SQLAlchemy ORM definitions can be found in the\n",(0,i.jsx)(t.code,{children:"switchmap/server/db/models.py"})," file."]}),"\n",(0,i.jsxs)(t.li,{children:["The GraphQL schema are located in the\n",(0,i.jsx)(t.code,{children:"switchmap/server/db/schema.py"})," file."]}),"\n",(0,i.jsxs)(t.li,{children:["The GraphQL schema attributes are located in the\n",(0,i.jsx)(t.code,{children:"switchmap/server/db/attributes.py"})," file."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"run-the-test-suite",children:"Run the Test Suite"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"NOTE:"})," The test cases are written to be run only from the root\ndirectory of the repository this to ensure no errors in importing both\nthe required test and code modules."]}),"\n",(0,i.jsx)(t.p,{children:"You can run all the tests with this command."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"(venv) $ cd /path/to/switchmap\n(venv) $ tests/bin/_do_all_tests.py\n"})}),"\n",(0,i.jsx)(t.p,{children:"An alternative method is to use pytest."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"(venv) $ cd /path/to/switchmap\n(venv) $ pytest tests/switchmap_\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can run individual tests with this command."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"(venv) $ cd /path/to/switchmap\n(venv) $ tests/switchmap_/path/to/test.py\n"})}),"\n",(0,i.jsx)(t.h3,{id:"populating-the-database-using-the-ingester",children:"Populating the Database Using the Ingester"}),"\n",(0,i.jsx)(t.p,{children:"Pollers post network data to the Switchmap-NG server. The Ingester\nprocess reads this posted data and uses it to update the database."}),"\n",(0,i.jsx)(t.p,{children:"You may not have access to network devices for testing, however there is\ntest data data that can be imported using the ingester."}),"\n",(0,i.jsx)(t.p,{children:"An easy way to populate the database using this data is to:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Configure switchmap"}),"\n",(0,i.jsxs)(t.li,{children:["Copy the test files in ",(0,i.jsx)(t.code,{children:"tests/testdata_"})," to the configure\n",(0,i.jsx)(t.code,{children:"cache_directory"})]}),"\n",(0,i.jsx)(t.li,{children:"Start or restart the poller daemon or app"}),"\n",(0,i.jsx)(t.li,{children:"The updated data should now be visible in the web UI"}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8366:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/igraphql-screenshot-2a16313a298df3142b459ac76c3a4b61.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);